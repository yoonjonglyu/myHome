{"version":3,"sources":["webpack:///./src/assets/images/intro_1280.png","webpack:///./src/components/main/intro.tsx","webpack:///./src/assets/images/html.png","webpack:///./src/assets/images/css.png","webpack:///./src/assets/images/js.png","webpack:///./src/assets/images/ts.png","webpack:///./src/assets/images/jquery.png","webpack:///./src/assets/images/webpack.png","webpack:///./src/assets/images/react.png","webpack:///./src/assets/images/vue.png","webpack:///./src/assets/images/node.png","webpack:///./src/assets/images/php.png","webpack:///./src/assets/images/socketio.png","webpack:///./src/assets/images/mysql.png","webpack:///./src/assets/images/postgre.png","webpack:///./src/assets/images/ubuntu.png","webpack:///./src/assets/images/docker.png","webpack:///./src/assets/images/apache.png","webpack:///./src/assets/images/nginx.png","webpack:///./src/assets/images/git.png","webpack:///./src/components/ui/organisms/aboutTech.tsx","webpack:///./src/views/main.tsx"],"names":["Cursor","StarLight","IntroBox","div","Headline","h1","props","isEnd","AboutHead","span","isStart","IntroText","headline","setHeadline","about","setAbout","intro","setIntro","introIndex","setIntroIndex","headAvail","setHeadAvail","aboutAvail","setAboutAvail","time","setTime","typeIntro","IntroContents","greeting","aboutme","description","length","typing","contents","state","type","split","dom","text","set","setTimeout","clearTimeout","className","h3","HeadLineIcon","TechStack","p","TechIcon","img","frontEnd","key","value","backEnd","devOps","map","data","index","src","alt","QuickLink","HeadLine","h2","Description","Main","tab","Fragment","to","title","onClick","e","handleTab","handleTapIndex","window","scrollTo"],"mappings":"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","file":"12.79a9c1d3ed54794afe01.js","sourcesContent":["export default __webpack_public_path__ + \"assets/14de6c83fa9a45e8a2ef10f1fa7bfa1c.png\";","import React, { useState, useEffect } from 'react';\r\nimport Styled, { keyframes } from 'styled-components';\r\n\r\nimport BackGroundIMG from '../../assets/images/intro_1280.png';\r\n\r\nconst Cursor = keyframes`\r\n    0%{border-right: 1px solid #fff} \r\n    50%{border-right: 1px solid #000} \r\n    100%{border-right: 1px solid #fff} \r\n`;\r\nconst StarLight = keyframes`\r\n    0%{opacity : 0.9} \r\n    50%{opacity : 0.8} \r\n    100%{opacity : 1} \r\n`;\r\nconst IntroBox = Styled.div`\r\n    width : 100%;\r\n    min-height : 380px;\r\n    text-align : center;\r\n    color : white;\r\n    background-image : url('${BackGroundIMG}');\r\n    background-size : cover;\r\n`;\r\n\r\nconst Headline = Styled.h1<{ isEnd: boolean }>`\r\n    display : inline-block;\r\n    margin : 90px 0 20px 0;\r\n    font-size : ${props => props.isEnd ? \"2.5rem\" : \"2rem\"};\r\n    line-height : 2rem;\r\n    color : #eaeaea;\r\n    &:after {\r\n        content : '';\r\n        animation : ${props => props.isEnd ? 'none' : Cursor} 0.5s step-end infinite;\r\n    }\r\n`;\r\nconst AboutHead = Styled.span<{ isStart: boolean, isEnd: boolean }>`\r\n    display : inline-block;\r\n    margin : 20px 8px;\r\n    font-size : 1.3rem;\r\n    line-height : 1.6rem;\r\n    color : #08d9d6;\r\n    animation : ${props => props.isEnd ? StarLight : 'none'} 0.5s step-end infinite;\r\n    &:after {\r\n        content : '';\r\n        animation : ${props => (props.isStart && props.isEnd === false) ? Cursor : 'none'} 0.5s step-end infinite;\r\n    }\r\n`;\r\nconst IntroText = Styled.span<{ isStart: boolean }>`\r\n    display : inline-block;\r\n    font-size : 1.2rem;\r\n    line-height : 1.5rem;\r\n    color : #ff2e63;\r\n    &:after {\r\n        content : '';\r\n        animation : ${props => props.isStart ? Cursor : 'none'} 0.5s step-end infinite;\r\n    }\r\n`;\r\n\r\nconst Intro: React.FC = function () {\r\n    const [headline, setHeadline] = useState(\"\");\r\n    const [about, setAbout] = useState(\"\");\r\n    const [intro, setIntro] = useState(\"\");\r\n    const [introIndex, setIntroIndex] = useState(0);\r\n    const [headAvail, setHeadAvail] = useState(false);\r\n    const [aboutAvail, setAboutAvail] = useState(false);\r\n    const [time, setTime] = useState(100);\r\n\r\n    const typeIntro = () => {\r\n        const IntroContents = {\r\n            greeting: \"Hello, World!\",\r\n            aboutme: \"소프트웨어 장인을 목표로 노력하는 개발자 류윤종입니다.\",\r\n            description: [\r\n                \"JavaScript(TypeScript)를 이용한 풀스택 개발을 지향합니다.\",\r\n                \"클린 코드, 누구나 이해하기 쉬운 코드 견고한 구조를 지향합니다.\",\r\n                \"늘 표면을 넘어 그 너머의 원리를 고민합니다.\"\r\n            ]\r\n        };\r\n\r\n        if (headline.length < IntroContents.greeting.length) {\r\n            typing(setHeadline, `${headline}${contents(\"greeting\")[headline.length]}`);\r\n        } else if (about.length < IntroContents.aboutme.length) {\r\n            typing(setAbout, `${about}${contents(\"aboutme\")[about.length]}`);\r\n            if (headAvail === false) {\r\n                setHeadAvail(true);\r\n            }\r\n        } else if (intro.length < IntroContents.description[introIndex].length) {\r\n            if (intro.length === (IntroContents.description[introIndex].length - 1)) { // 문장 완성 후 잠시 멈춤\r\n                setTime(800);\r\n            }\r\n            typing(setIntro, `${intro}${contents(\"description\")[intro.length]}`);\r\n\r\n            if (aboutAvail === false) {\r\n                setAboutAvail(true);\r\n                setTime(150);\r\n            }\r\n        } else { // intro 초기화\r\n            let state = 0;\r\n            if (introIndex + 1 < IntroContents.description.length) {\r\n                state = 1 + introIndex;\r\n                setIntroIndex((1 + introIndex));\r\n            } else {\r\n                state = 0;\r\n                setIntroIndex(0);\r\n            }\r\n            setTime(150);\r\n            typing(setIntro, IntroContents.description[state][0]);\r\n        }\r\n\r\n        function contents(type: \"greeting\" | \"aboutme\" | \"description\") {\r\n            return type === \"description\" ? IntroContents[type][introIndex].split('')\r\n                : IntroContents[type].split('');\r\n        }\r\n        function typing(dom: React.Dispatch<React.SetStateAction<string>>, text: string) {\r\n            dom(text);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const set = setTimeout(typeIntro, time);\r\n\r\n        const clean = () => {\r\n            clearTimeout(set);\r\n        }\r\n\r\n        return clean;\r\n    }, [headline, about, intro]);\r\n\r\n    return (\r\n        <IntroBox>\r\n            <Headline className=\"intro-hello\" isEnd={headAvail}>\r\n                {headline}<span></span>\r\n            </Headline>\r\n            <p>\r\n                <AboutHead isStart={headAvail} isEnd={aboutAvail}>\r\n                    {about}\r\n                </AboutHead>\r\n            </p>\r\n            <p>\r\n                <IntroText isStart={aboutAvail}>\r\n                    {intro}\r\n                </IntroText>\r\n            </p>\r\n        </IntroBox>\r\n    );\r\n};\r\n\r\nexport default Intro","export default __webpack_public_path__ + \"assets/35ed6fad4738af33462d9332e10c4191.png\";","export default __webpack_public_path__ + \"assets/dc7f352cd167d07dd9a988ffe60660c1.png\";","export default __webpack_public_path__ + \"assets/7a0d16d7fde44b925665d5cf14a9f2ba.png\";","export default __webpack_public_path__ + \"assets/eb0e4f9ace00657cc913616fe6bdfbac.png\";","export default __webpack_public_path__ + \"assets/4dce8ad7b91507d9ff663ab772c697bd.png\";","export default __webpack_public_path__ + \"assets/987182bf6f43efbf5b79975fb6128b34.png\";","export default __webpack_public_path__ + \"assets/6aff2fa26fa87bebf356d58233dc1c40.png\";","export default __webpack_public_path__ + \"assets/d23b6d26720f10b5f922d74acc31a377.png\";","export default __webpack_public_path__ + \"assets/c30b7e49958fd134f6bca0e405f07d32.png\";","export default __webpack_public_path__ + \"assets/8a40ac730a490744bbcbf6c707ff21a2.png\";","export default __webpack_public_path__ + \"assets/9bdea57b03a37e89d69e1f5274eaca00.png\";","export default __webpack_public_path__ + \"assets/6e42b2a035b28f24002127c163e271e1.png\";","export default __webpack_public_path__ + \"assets/d6dac60bc475746dd6ab33a767e7700d.png\";","export default __webpack_public_path__ + \"assets/87d6f4cd09df86bfeaed71bcad9e6ad4.png\";","export default __webpack_public_path__ + \"assets/38c4f29a0d66174a0c65a3e4a076f90c.png\";","export default __webpack_public_path__ + \"assets/ec1ba1629a102935eb91b2693f2f5fbb.png\";","export default __webpack_public_path__ + \"assets/cf55c87b3ac8f1ad0a32e5408e50107e.png\";","export default __webpack_public_path__ + \"assets/61d15811a0dccbced0917ba87a6ce627.png\";","import React from 'react';\r\nimport Styled from 'styled-components';\r\nimport CodeIcon from '@material-ui/icons/Code';\r\n\r\n/** 아이콘 불러오기 */\r\nimport HTML from '../../../assets/images/html.png';\r\nimport CSS from '../../../assets/images/css.png';\r\nimport JS from '../../../assets/images/js.png';\r\nimport TS from '../../../assets/images/ts.png';\r\nimport JQUERY from '../../../assets/images/jquery.png';\r\nimport WEBPACK from '../../../assets/images/webpack.png';\r\nimport REACT from '../../../assets/images/react.png';\r\nimport VUE from '../../../assets/images/vue.png';\r\n// 벡엔드 시작\r\nimport NODE from '../../../assets/images/node.png';\r\nimport PHP from '../../../assets/images/php.png';\r\nimport SOCKETIO from '../../../assets/images/socketio.png';\r\nimport MYSQL from '../../../assets/images/mysql.png';\r\nimport POSTGRESQL from '../../../assets/images/postgre.png';\r\n// 운영 시작\r\nimport LINUX from '../../../assets/images/ubuntu.png';\r\nimport DOCKER from '../../../assets/images/docker.png';\r\nimport APACHE from '../../../assets/images/apache.png';\r\nimport NGINX from '../../../assets/images/nginx.png';\r\nimport GIT from '../../../assets/images/git.png';\r\nimport AWS from '../../../assets/images/aws.png';\r\n\r\nconst Headline = Styled.h3`\r\n    padding : 10px 0;\r\n    text-align : center;\r\n    font-size : 1.2rem;\r\n`;\r\nconst HeadLineIcon = Styled(CodeIcon)`\r\n    padding : 4px 8px 0 0;\r\n    vertical-align: bottom;\r\n`;\r\nconst TechStack = Styled.p`\r\n    text-align : center;\r\n`;\r\nconst TechIcon = Styled.img`\r\n    max-width : 100px;\r\n    max-height : 100px;\r\n    margin : 16px;\r\n    vertical-align : middle;\r\n`;\r\n\r\nconst AboutTech: React.FC = function () {\r\n    const frontEnd: Array<{ key: string, value: string }> = [\r\n        {\r\n            key: \"HTML\",\r\n            value: HTML\r\n        },\r\n        {\r\n            key: \"CSS\",\r\n            value: CSS\r\n        },\r\n        {\r\n            key: \"Javascript\",\r\n            value: JS\r\n        },\r\n        {\r\n            key: \"jQuery\",\r\n            value: JQUERY\r\n        },\r\n        {\r\n            key: \"WebPack\",\r\n            value: WEBPACK\r\n        },\r\n        {\r\n            key: \"React\",\r\n            value: REACT\r\n        },\r\n        {\r\n            key: \"Vue\",\r\n            value: VUE\r\n        },\r\n        {\r\n            key: \"TypeScript\",\r\n            value: TS\r\n        }\r\n    ];\r\n    const backEnd: Array<{ key: string, value: string }> = [\r\n        {\r\n            key: \"Node.js\",\r\n            value: NODE\r\n        },\r\n        {\r\n            key: \"PHP\",\r\n            value: PHP\r\n        },\r\n        {\r\n            key: \"Socket.IO\",\r\n            value: SOCKETIO\r\n        },\r\n        {\r\n            key: \"MySQL\",\r\n            value: MYSQL\r\n        },\r\n        {\r\n            key: \"PostgreSQL\",\r\n            value: POSTGRESQL\r\n        },\r\n    ];\r\n    const devOps: Array<{ key: string, value: string }> = [\r\n        {\r\n            key: \"Linux\",\r\n            value: LINUX\r\n        },\r\n        {\r\n            key: \"Docker\",\r\n            value: DOCKER\r\n        },\r\n        {\r\n            key: \"Apache\",\r\n            value: APACHE\r\n        },\r\n        {\r\n            key: \"Nginx\",\r\n            value: NGINX\r\n        },\r\n        {\r\n            key: \"GIT\",\r\n            value: GIT\r\n        },\r\n        {\r\n            key: \"AWS\",\r\n            value: AWS\r\n        }\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <Headline><HeadLineIcon />프론트 엔드</Headline>\r\n            <TechStack>\r\n                {\r\n                    frontEnd.map((data, index) => <TechIcon key={index} src={data.value} alt={data.key} />)\r\n                }\r\n            </TechStack>\r\n            <Headline><HeadLineIcon />벡 엔드</Headline>\r\n            <TechStack>\r\n                {\r\n                    backEnd.map((data, index) => <TechIcon key={index} src={data.value} alt={data.key} />)\r\n\r\n                }\r\n            </TechStack>\r\n            <Headline><HeadLineIcon />데브 옵스</Headline>\r\n            <TechStack>\r\n                {\r\n                    devOps.map((data, index) => <TechIcon key={index} src={data.value} alt={data.key} />)\r\n                }\r\n            </TechStack>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AboutTech","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Styled from 'styled-components';\r\n\r\nimport { Layout } from '../components/layout/layout';\r\nimport Intro from '../components/main/intro';\r\nimport { ProfileTimeLine } from '../components/about/profileTimeLine';\r\nimport AboutTech from '../components/ui/organisms/aboutTech';\r\n\r\nimport { tabIndex } from '../lib/custom/tag';\r\n\r\ninterface MainProps {\r\n}\r\n\r\nconst QuickLink = Styled(Link)`\r\n    text-decoration : none;\r\n    color : unset;\r\n`;\r\nconst HeadLine = Styled.h2`\r\n    text-align : center;\r\n    font-size : 1.5rem;\r\n`;\r\nconst Description = Styled.p`\r\n    text-align : center;\r\n    font-size: 1.1rem;\r\n    line-height: 1.6rem;\r\n`;\r\n\r\nconst Main: React.FC<MainProps> = function (props) {\r\n    const tab = tabIndex();\r\n\r\n    const handleTab = (e: any, value: number) => {\r\n        tab.handleTapIndex(value);\r\n        window.scrollTo(0, 0);\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            <React.Fragment>\r\n                <section className=\"main-headline\">\r\n                    <Intro />\r\n                </section>\r\n                <section className=\"main-about\">\r\n                    <HeadLine>개인 연력</HeadLine>\r\n                    <QuickLink to=\"./about\" title=\"더 알아보기\" onClick={(e) => handleTab(e, 1)}>\r\n                        <ProfileTimeLine />\r\n                    </QuickLink>\r\n                </section>\r\n                <section className=\"main-skill\">\r\n                    <HeadLine>기술 스택</HeadLine>\r\n                    <Description>\r\n                        실무에서 실제로 사용해 봤거나 토이 프로젝트에서 활용 해본적 있는 것들<br />\r\n                    지금 당장 실무에 투입 되어서도 활용 가능한 수준의 기술 중 대표적인 것들입니다.\r\n                </Description>\r\n                    <AboutTech />\r\n                </section>\r\n                <section className=\"main-portfolio\">\r\n                    <HeadLine>포트폴리오</HeadLine>\r\n                </section>\r\n            </React.Fragment>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport { Main, MainProps }"],"sourceRoot":""}